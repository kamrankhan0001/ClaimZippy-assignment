import React, { useReducer } from 'react'
import "./TodoForm.css";
import uuid from "uuid";

// i have taken two props task and createTodo, 
//task=> seems redundent, createTodo=> function thet will called when form is submitted

function TodoForm({task, createTodo}) {
// using useReducer hook used to manage local state of the component 
const [input, setInput] = useReducer((state, newState)=>({...state, ...newState}),
{
// initial state is set to an object with single property task initialized an empty    
    task: ""
}
);
//update the state with new value of the changed input field
const handleChange = (e) =>{
    setInput({[e.target.name]: e.target.value});
};
// function that called when is submitted it prevent default form submit behavior
// creates a new todo object with a unique id generated by uuid()
const handleSubmit = (e) => {
    e.preventDefault();
    const newTodo = { id: uuid(), task: input.task, completed: false };
//createTodo function (passed as a prop) is then called with the new todo object    
    createTodo(newTodo);
    // finally reset the input state
    setInput({ task: "" });
  };
return (
<form className='TodoForm' onSubmit={handleSubmit}>
<label >New todo</label>
<input
   type='text'
   placeholder='New Todo'
   id="task"
   name="task"
   value={input.task}
   onChange={handleChange}
/>
<button>Add Todo</button>
</form>
  )
}

export default TodoForm;